/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package club.j3studios.system;

import club.j3studios.system.b_windows.MainMenu;
import club.j3studios.system.control.Ctrl_Cajas;
import club.j3studios.system.control.Ctrl_Usuario;
import club.j3studios.system.database.SQL;
import club.j3studios.system.model.Cajas;
import club.j3studios.system.model.Usuario;
import club.j3studios.system.utils.Tools;
import java.awt.event.ActionEvent;
import java.awt.event.KeyEvent;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.JFrame;
import javax.swing.Timer;

/**
 *
 * @author josne
 */
public class LoginUser extends javax.swing.JFrame {

    /**
     * Creates new form Login
     */
    public LoginUser() {
        initComponents();
        setResizable(false);
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        setLocationRelativeTo(null);
        setTitle("J3Studios - Ingreso");
        avisoErroneo.setText("");
        
        loadCajas();
        new Tools().startSocketServer();
        //SQL.conectar2();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        button1 = new club.j3studios.system.utils.Button();
        textField = new club.j3studios.system.utils.TextField();
        passwordField = new club.j3studios.system.utils.PasswordField();
        avisoErroneo = new javax.swing.JLabel();
        cajasBox = new club.j3studios.system.utils.ComboBoxSuggestion();
        jLabel5 = new javax.swing.JLabel();
        background = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/user1.png"))); // NOI18N
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 10, 310, 140));

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/user2.png"))); // NOI18N
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 190, -1, 50));

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/password.png"))); // NOI18N
        jLabel4.setToolTipText("");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 250, -1, 50));

        button1.setBackground(new java.awt.Color(60, 166, 251));
        button1.setForeground(new java.awt.Color(255, 255, 255));
        button1.setText("INICIAR SESION");
        button1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        button1.setShadowColor(new java.awt.Color(51, 51, 255));
        button1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button1ActionPerformed(evt);
            }
        });
        jPanel1.add(button1, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 389, 190, -1));

        textField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textFieldActionPerformed(evt);
            }
        });
        textField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                textFieldKeyPressed(evt);
            }
        });
        jPanel1.add(textField, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 190, 210, 50));

        passwordField.setToolTipText("");
        passwordField.setShowAndHide(true);
        passwordField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                passwordFieldActionPerformed(evt);
            }
        });
        passwordField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                passwordFieldKeyPressed(evt);
            }
        });
        jPanel1.add(passwordField, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 250, 210, 50));

        avisoErroneo.setForeground(new java.awt.Color(255, 0, 0));
        avisoErroneo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        avisoErroneo.setText("Clave erronea");
        jPanel1.add(avisoErroneo, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 160, 310, 30));

        jPanel1.add(cajasBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 340, 230, 30));

        jLabel5.setForeground(new java.awt.Color(102, 102, 102));
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("Selecciona la CAJA en la que vas a trabajar");
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 320, 270, 20));

        background.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/LoginSystem.png"))); // NOI18N
        jPanel1.add(background, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 730, 450));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 730, 450));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void passwordFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_passwordFieldActionPerformed

    }//GEN-LAST:event_passwordFieldActionPerformed

    private void button1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button1ActionPerformed
        performLogin();
    }//GEN-LAST:event_button1ActionPerformed

    private void textFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textFieldActionPerformed

    }//GEN-LAST:event_textFieldActionPerformed

    private void textFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textFieldKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            performLogin();
        }
    }//GEN-LAST:event_textFieldKeyPressed

    private void passwordFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_passwordFieldKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            performLogin();
        }
    }//GEN-LAST:event_passwordFieldKeyPressed
    
    
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(() -> {
            new LoginUser().setVisible(true);
            new Tools().startSocketServer();
        });
        
    }
    
    
    @SuppressWarnings("deprecation")
    public void performLogin() {
        if (!textField.getText().isEmpty() && !passwordField.getText().isEmpty()) {
            String username = textField.getText();
            String password = new String(passwordField.getPassword());

            Ctrl_Cajas ctrlCajas = new Ctrl_Cajas();
            Ctrl_Usuario ctrlUser = new Ctrl_Usuario();
            Usuario usuario = new Usuario();
            usuario.setUsuario(username);
            usuario.setPassword(password);

            if (ctrlUser.loginUser(usuario)) { 
                ctrlUser.loadUserData(usuario);
                if (usuario.getStatus() == true) {
                    passwordField.setText("");
                    textField.setText("");
                    avisoErroneo.setText("Ya existe un conexión activa con ese usuario!");
                    Timer timer = new Timer(5000, (ActionEvent e) -> {
                        avisoErroneo.setText("");
                    });
                    timer.start();
                    return;
                }
                
                Cajas cage = ctrlCajas.getCaja(cajasBox.getSelectedItem().toString());
                if (cage.getIdUsuario() != 0) {
                    passwordField.setText("");
                    textField.setText("");
                    avisoErroneo.setText("Ya existe un conexión activa en esa CAJA!");
                    Timer timer = new Timer(5000, (ActionEvent e) -> {
                        avisoErroneo.setText("");
                    });
                    timer.start();
                    return;
                }
                
                ctrlCajas.updateStatus(cage, usuario.getIdUsuario());
                ctrlUser.updateStatus(usuario, true);
                MainMenu system = new MainMenu(usuario, cage);
                system.setVisible(true);
                dispose();
            } else {
                passwordField.setText("");
                textField.setText("");
                avisoErroneo.setText("Usuario o clave incorrecto, intenta de nuevo.");
                Timer timer = new Timer(5000, (ActionEvent e) -> {
                    avisoErroneo.setText("");
                });
                timer.start();
            }
        } else {
            avisoErroneo.setText("El campo de usuario/clave está vacío");
            Timer timer = new Timer(5000, (ActionEvent e) -> {
                avisoErroneo.setText("");
            });
            timer.start();
        }
    }
    
    @SuppressWarnings("unchecked")
    public void loadCajas() {
        Connection con = SQL.conectar();
        String sql = "select * from tb_cajas";
        Statement st;
        try {
            st = con.createStatement();
            ResultSet rs = st.executeQuery(sql);
            while(rs.next()) {
                cajasBox.addItem(rs.getString("nombre"));
            }
            con.close();
        } catch (SQLException e) {
            System.out.print("[J3Studios] Error al cargar las cajas.");
        }
	}

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel avisoErroneo;
    private javax.swing.JLabel background;
    private club.j3studios.system.utils.Button button1;
    private club.j3studios.system.utils.ComboBoxSuggestion cajasBox;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private club.j3studios.system.utils.PasswordField passwordField;
    private club.j3studios.system.utils.TextField textField;
    // End of variables declaration//GEN-END:variables
}
